{"version":3,"sources":["components/Timer.js","components/App.js","index.js"],"names":["Timer","props","className","hours","toString","padStart","minutes","seconds","displayMessage","App","useState","setHours","setMinutes","setSeconds","setDisplayMessage","useEffect","interval","setInterval","clearInterval","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0NAmBeA,EAhBD,SAACC,GACb,OACE,sBAAKC,UAAU,YAAf,UACE,oBAAIA,UAAU,mBAAd,8BACA,oBAAIA,UAAU,sBAAd,4BACA,qBAAKA,UAAU,mBAAf,SACE,sBAAKA,UAAU,wBAAf,UACGD,EAAME,MAAMC,WAAWC,SAAS,EAAG,KADtC,IAC6CJ,EAAMK,QAAQF,WAAWC,SAAS,EAAG,KADlF,IAEGJ,EAAMM,QAAQH,WAAWC,SAAS,EAAG,UAG1C,oBAAIH,UAAU,qBAAd,SAAoCD,EAAMO,gBAAkB,oDCiCnDC,G,MAxCH,WAAM,MAEUC,mBAAS,GAFnB,mBAETP,EAFS,KAEFQ,EAFE,OAGcD,mBAAS,IAHvB,mBAGTJ,EAHS,KAGAM,EAHA,OAIcF,mBAAS,GAJvB,mBAITH,EAJS,KAIAM,EAJA,OAK4BH,oBAAS,GALrC,mBAKTF,EALS,KAKOM,EALP,KAiChB,OAzBAC,qBAAU,WACR,IAAIC,EAAWC,aAAY,WACzBC,cAAcF,GAEE,IAAZT,GACc,IAAZD,IACFO,EAAW,IACXD,EAAWN,EAAU,IAEP,IAAZA,GACY,IAAVH,IACFU,EAAW,IACXD,EAAW,IACXD,EAASR,EAAQ,IAGP,IAAVA,GAA2B,IAAZG,GAA6B,IAAZC,GAClCO,GAAkB,IAGpBD,EAAWN,EAAU,KAEtB,OACF,CAACA,EAASD,EAASH,IAGpB,qBAAKD,UAAU,MAAf,SACE,cAAC,EAAD,CAAOK,QAASA,EAASD,QAASA,EAASH,MAAOA,EAAOK,eAAgBA,QCtC/EW,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U","file":"static/js/main.bacb8122.chunk.js","sourcesContent":["// Styles\r\nimport '../stylesheets/Timer.scss';\r\n\r\nconst Timer = (props) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"container__title\">Countdown timer </h1>\r\n      <h3 className=\"container__subtitle\">Time remaining</h3>\r\n      <div className=\"container__timer\">\r\n        <div className=\"container__timer--num\">\r\n          {props.hours.toString().padStart(2, '0')}:{props.minutes.toString().padStart(2, '0')}:\r\n          {props.seconds.toString().padStart(2, '0')}\r\n        </div>\r\n      </div>\r\n      <h3 className=\"container__message\">{props.displayMessage && <span>Game over!</span>}</h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Timer;\r\n","// React\r\nimport React, { useState, useEffect } from 'react';\r\n// Components\r\nimport Timer from './Timer';\r\n// Styles\r\nimport '../stylesheets/App.scss';\r\n\r\nconst App = () => {\r\n  //state\r\n  const [hours, setHours] = useState(1);\r\n  const [minutes, setMinutes] = useState(30);\r\n  const [seconds, setSeconds] = useState(0);\r\n  const [displayMessage, setDisplayMessage] = useState(false);\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    let interval = setInterval(() => {\r\n      clearInterval(interval);\r\n\r\n      if (seconds === 0) {\r\n        if (minutes !== 0) {\r\n          setSeconds(59);\r\n          setMinutes(minutes - 1);\r\n        }\r\n        if (minutes === 0) {\r\n          if (hours !== 0) {\r\n            setSeconds(59);\r\n            setMinutes(59);\r\n            setHours(hours - 1);\r\n          }\r\n        }\r\n        if (hours === 0 && minutes === 0 && seconds === 0) {\r\n          setDisplayMessage(true);\r\n        }\r\n      } else {\r\n        setSeconds(seconds - 1);\r\n      }\r\n    }, 1000);\r\n  }, [seconds, minutes, hours]);\r\n\r\n  return (\r\n    <div className=\"app\">\r\n      <Timer seconds={seconds} minutes={minutes} hours={hours} displayMessage={displayMessage} />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}